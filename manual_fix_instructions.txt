# How to Fix the Team Assignment Issue in scootd.c

## Problem
In the current implementation of scootd.c, player position 21 is being skipped during team assignment because the code doesn't properly parse team designations (like ":H" or ":A") in checkin types.

## Solution
1. Add the `get_team_designation()` helper function to extract team designations
2. Update the team assignment logic to use this function

## Step-by-Step Instructions

### Step 1: Add the helper function
Open scootd.c and add this function after the includes section (around line 10):

```c
/* Helper function to extract team designation from checkin type */
char get_team_designation(const char* checkin_type) {
    /* Find the last ":" character in the type string */
    const char *last_colon = strrchr(checkin_type, ':');
    if (last_colon != NULL && (last_colon[1] == 'H' || last_colon[1] == 'A')) {
        return last_colon[1];
    }
    return '\0';
}
```

### Step 2: Find the team assignment blocks
There are two identical team assignment blocks in the code:
1. First occurrence is around line 1074
2. Second occurrence is around line 1200

### Step 3: Replace the first team assignment block
Find this code:

```c
// Assign teams to players without a team assignment
for (int i = 0; i < 8; i++) {
    if (players[i].team == 0) {
        // Assign to team with fewer players
        if (home_team_count < 4) {
            // If swap is true, reverse the team assignment
            players[i].team = swap ? 2 : 1; // HOME or AWAY based on swap
            home_team_count++;
        } else {
            // If swap is true, reverse the team assignment
            players[i].team = swap ? 1 : 2; // AWAY or HOME based on swap
            away_team_count++;
        }
```

Replace it with:

```c
// Assign teams to players without a team assignment
for (int i = 0; i < 8; i++) {
    if (players[i].team == 0) {
        // Parse checkin type for team designation
        const char *type = players[i].checkin_type;
        char team_designation = get_team_designation(type);
        
        // Assign team based on designation (considering swap if enabled)
        if (team_designation == 'H') {
            players[i].team = swap ? 2 : 1; // HOME or swap to AWAY
            home_team_count++;
        } else if (team_designation == 'A') {
            players[i].team = swap ? 1 : 2; // AWAY or swap to HOME
            away_team_count++;
        } else {
            // Default assignment (existing logic) for players without team designation
            if (home_team_count < 4) {
                // If swap is true, reverse the team assignment
                players[i].team = swap ? 2 : 1; // HOME or AWAY based on swap
                home_team_count++;
            } else {
                // If swap is true, reverse the team assignment
                players[i].team = swap ? 1 : 2; // AWAY or HOME based on swap
                away_team_count++;
            }
        }
```

### Step 4: Make the same change to the second team assignment block
Find the second occurrence of the team assignment logic (around line 1200) and make the same replacement.

### Step 5: Compile and test
Compile the updated scootd.c:

```bash
gcc -o scootd_fixed scootd.c -lpq
```

## What this fix does
The fix parses checkin types for explicit team designations and ensures players are assigned to the correct team. For example:
- A player with checkin_type "loss_promoted:2:A" will be assigned to AWAY team
- A player with checkin_type "autoup:1:H" will be assigned to HOME team

This should resolve the issue where player position 21 was being skipped.